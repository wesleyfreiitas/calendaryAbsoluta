<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Absoluta - Calendary</title>
    <link rel="stylesheet" href="main.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">



    <!-- <link rel="stylesheet" href="calendario.css"> -->
    <!-- Crie um arquivo CSS para o estilo do calendário -->
    <script src="main.js"></script>
    <style>
        body {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background-color: #f0f0f0;
            min-height: 100vh;
            /* Cor de fundo da página */
        }

        .meu-input-personalizado {
            display: inline-block;
            padding: 0.5em;
            margin: 0.3em;
            width: 100%;
            box-sizing: border-box;
            border: 1px solid #ccc;
            /* Cor da borda */
            border-radius: 4px;
            /* Cantos arredondados */
            transition: border-color 0.3s ease-in-out;
        }

        .meu-input-personalizado:focus {
            border-color: #3273dc;
            /* Cor da borda ao receber foco */
        }

        .destaque-div {
            background: linear-gradient(to bottom, #D7FF85, #D7FF85);
            padding: 20px;
            margin: 0 auto;
            color: #000;
        }

        .meu-botao-personalizado {
            display: inline-block;
            padding: 0.5em 1em;
            margin: 0.3em;
            text-decoration: none;
            background-color: #3273dc;
            /* Cor de fundo azul */
            color: #fff;
            /* Cor do texto branco */
            border: 1px solid #3273dc;
            /* Cor da borda igual à cor de fundo */
            border-radius: 4px;
            /* Cantos arredondados */
            transition: background-color 0.3s ease-in-out, color 0.3s ease-in-out;
        }

        .meu-botao-personalizado:hover {
            background-color: #2762c2;
            /* Altere a cor de fundo ao passar o mouse */
            color: #fff;
            /* Altere a cor do texto ao passar o mouse */
        }

        .container {
            display: flex;
            background-color: #fff;
            /* Cor de fundo da div retangular */
            border: 1px solid #ccc;
            /* Borda da div retangular */
            border-radius: 10px;
            width: 100%;
            /* Largura da div retangular */

            flex-wrap: wrap;
            justify-content: center;
            max-width: 1200px;
            /* ou qualquer valor desejado */
        }

        .calendario {
            flex: 1;
            /* Ocupa metade da largura da div retangular */
            /* Estilize o calendário aqui */
            padding: 20px;
        }

        .informacoes {
            flex: 1;
            /* Ocupa metade da largura da div retangular */
            text-align: center;
            padding: 20px;
        }

        .selecionado {
            background-color: #fff;
            color: #3273dc;
            border: 1px solid #3273dc;
        }

        h3 {
            font-size: 1.5em;
            margin-bottom: 10px;
        }

        .relogio-icon {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .relogio-icon img {
            width: 30px;
            height: 30px;
            margin-right: 5px;
        }

        .calendario,
        .informacoes {
            flex: 1;
            padding: 20px;
            box-sizing: border-box;
        }

        @media only screen and (max-width: 768px) {

            .container {
                margin-top: 345px;
                /* Adicione o espaçamento superior desejado */
            }

            .calendario,
            .informacoes {
                width: 100%;
            }

        }
    </style>
</head>

<body>
    <div class="container">
        <div class="calendario">
            <div class="destaque-div">
                <div id="calendar"></div>
            </div>
        </div>
        <div class="informacoes">
            <h3>Wesley Freitas Calendary</h3>
            <div class="relogio-icon">
                <span><i class="fa-solid fa-clock"></i>30 min</span>
            </div><br>
            <div id="schedule">
                <!-- Os botões serão adicionados aqui dinamicamente -->
            </div><br>
            <form method="POST" action="create">
                <input type="hidden" name="selectedDate" id="selectedDate" class="meu-input-personalizado">
                <input type="text" name="name" id="name" placeholder="Nome" class="meu-input-personalizado">
                <input type="email" name="email" id="email" placeholder="email@email.com"
                    class="meu-input-personalizado">
                <!-- <input type="text" name="date" id="date" class="meu-input-personalizado" placeholder="12/02/2089"> -->
                <input type="hidden" name="date" id="date" class="meu-input-personalizado"
                    placeholder="Selecione uma data">
                <!-- Adiciona o campo oculto para armazenar a hora selecionada -->
                <input type="hidden" name="time" id="time">
                <input type="hidden" name="orner" id="orner" value="wesleydefreiitas01@gmail.com">
                <button class="meu-botao-personalizado" type="submit">Agendar</button>
            </form>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {

            // Função para gerar horários com incremento de meia em meia hora
            // function gerarHorarios(inicio, fim, incremento) {
            //     let horarios = [];
            //     let atual = inicio;

            //     while (atual <= fim) {
            //         horarios.push(atual);
            //         atual = adicionarMeiaHora(atual, incremento);
            //     }

            //     return horarios;
            // }

            // Função auxiliar para adicionar meia hora a um horário
            // function adicionarMeiaHora(horario, incremento) {
            //     let [horas, minutos] = horario.split(':');
            //     minutos = parseInt(minutos, 10) + incremento;

            //     if (minutos >= 60) {
            //         horas = parseInt(horas, 10) + Math.floor(minutos / 60);
            //         minutos %= 60;
            //     }

            // Formatação para manter o formato HH:MM
            //     horas = horas.toString().padStart(2, '0');
            //     minutos = minutos.toString().padStart(2, '0');

            //     return `${horas}:${minutos}`;
            // }

            // Parâmetros iniciais
            // const inicio = '08:00';
            // const fim = '18:00';
            // const incremento = 30; // Meia hora

            // Gerar array de horários
            // const horarios = gerarHorarios(inicio, fim, incremento);

            // Exibir o array de horários
            // console.log(horarios);
            // const horarios = ['00:00', '01:00', '02:00', '03:00', '04:00', '05:00', '06:00', '07:00', '08:00', '09:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00']


        });

        var element = document.getElementById("calendar");
        var calendar = new FullCalendar.Calendar(element, {
            initialView: 'dayGridMonth',
            locale: 'pt-br',
            events: 'getcalendar',
            eventClick: function (info) {
                window.location.href = '/event/' + info.event.id;
                document.getElementById('date').value = info.dateStr;
            },
            height: 'auto',
            unselectAuto: false,
            selectAllow: function (selectInfo) {
                // Verifica se o dia selecionado é sábado ou domingo
                var day = selectInfo.start.getDay();
                return day !== 0 && day !== 6; // Retorna true se não for sábado ou domingo
            },
            selectable: true,
            select: function (selectionInfo) {
                // Adiciona a data selecionada ao campo de entrada 'date'
                const selectedDate = new Date(selectionInfo.startStr);
                const today = new Date();
                // Converte ambas as datas para strings no formato 'YYYY-MM-DD'
            var selectedDateString = selectedDate.toISOString().split('T')[0];
            var todayDateString = today.toISOString().split('T')[0];

            // Verifica se a data selecionada é retroativa
            if (selectedDateString < todayDateString) {
                console.log('Data selecionada:', selectedDateString);
                console.log('Data de hoje:', todayDateString);
                alert('Por favor, selecione uma data futura.');
                calendar.unselect(); // Desfaz a seleção da data

                
                } else {
                    document.getElementById('date').value = selectionInfo.startStr;
                    // Faça uma requisição AJAX para obter os horários disponíveis
                    $.post('/getAvailableTimes', { selectedDate, owner: 'wesleydefreiitas01@gmail.com' }, function (horarios) {
                        console.log('Horários disponíveis:', horarios);

                        // Limpa a div de horários antes de adicionar os novos horários
                        $('#schedule').empty();

                        const scheduleDiv = document.getElementById('schedule');

                        if (scheduleDiv) {
                            // Obter a hora atual
                            const currentDate = new Date();
                            const hour = currentDate.getHours();

                            // Verificar se é de manhã ou tarde
                            const periodDay = (hour >= 12) ? 'Afternoon' : 'Morning';

                            // Filtrar os horários disponíveis com base no período do dia
                            const horariosFiltrados = horarios.filter(function (horario) {
                                const hora = parseInt(horario.split(':')[0]);

                                if (periodDay === 'Morning' && hora < 12) {
                                    return true; // Horários da manhã
                                } else if (periodDay === 'Afternoon' && hora >= 12) {
                                    return true; // Horários da tarde
                                }

                                return false;
                            });

                            // Iterar sobre os horários disponíveis filtrados
                            horariosFiltrados.forEach(function (horario) {
                                const novoBotao = document.createElement('button');
                                novoBotao.classList.add('meu-botao-personalizado');
                                novoBotao.textContent = horario;

                                novoBotao.addEventListener('click', function () {
                                    const botoes = document.querySelectorAll('.meu-botao-personalizado');
                                    botoes.forEach(b => b.classList.remove('selecionado'));
                                    novoBotao.classList.add('selecionado');
                                    document.getElementById('time').value = horario;
                                });

                                scheduleDiv.appendChild(novoBotao);
                            });
                        } else {
                            console.error('Div com id "schedule" não encontrada.');
                        }
                    });

                }
            }
        });

        calendar.render();

    </script>
</body>

</html>